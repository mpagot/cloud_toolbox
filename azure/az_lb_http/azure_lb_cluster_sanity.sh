# Create in Azure:
# 2 VM 
# 1 public IP
# 1 LB to dynamically assign the PublicIP to the 3 VM
# each VM has a simple web server installed (by cloud-init script)
# the VMs are part of a pacemaker cluster
# the cluster has a azure-lb RA
# the LB health probe is pointed to the port exposed by RA

. ./utils.sh

MY_PUBIP_ADDR="$(get_pub_ip)"

for NUM in $(seq 2); do
    echo "--------- whoami"
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' whoami' | grep $MY_USERNAME || test_die "Remote user is not ${MY_USERNAME}"
    echo "--------- sudo whoami"
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' sudo whoami' | grep root || test_die "Remote user with sudo is not root"
    echo "--------- ls .ssh"
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' ls -lai ~/.ssh' | grep -v '.pub' | grep -c 'id_rsa' | grep 1 || test_die "${MY_USERNAME} on node${NUM} has one private key needed to talk to the other node"
    # disabled as it does not pass on vm2
    #ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' cat ~/.ssh/authorized_keys' | wc -l | grep 3 || test_die "${MY_USERNAME} on node${NUM} has 3 allowed keys in total, one is for the bastion"
    #ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' cat ~/.ssh/authorized_keys' | grep 'Temp internal cluster key for' | wc -l | grep 2 || test_die "${MY_USERNAME} on node${NUM} has 2 allowed keys for the inter-nodes communication"

    # ignore for the moment internal nodes keys for root as they self generated by crm and are not shared
    echo "--------- ls root .ssh"
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' sudo ls -lai /root/.ssh'
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' sudo cat /root/.ssh/id_rsa.pub'
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' sudo cat /root/.ssh/authorized_keys'
    #ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' sudo ls -lai /root/.ssh' | grep -c 'id_rsa' | grep 0 || test_die "root on node${NUM} do not have private key"
    echo "--------- homes"
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' sudo find /home/ -type d -mindepth 1 -maxdepth 1' | wc -l | grep 1 || test_die "Only home for ${MY_USERNAME} is expected at this point"
    echo "--------- passwd"
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' sudo cat /etc/passwd' | grep -c -E "root|${MY_USERNAME}|hacluster" | grep 3 || test_die "node${NUM} has root, hacluster and ${MY_USERNAME}"
    echo "--------- private ip"
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' ip a show eth0' | grep -E "inet .*192\.168\.1\.4${NUM}" || test_die "node${NUM} do not have private IP 192.168.1.4${NUM}"
    echo "--------- cluster"
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' sudo crm status' || test_die "node${NUM} fails calling crm status"
    echo "--------- webserver"
    ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'curl http://'"${MYNAME}-vm-0${NUM}"
    echo "--------- connectivity"
    for OTHER_NUM in $(seq 2); do
      ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' ping -c 10 192.168.1.4'"${OTHER_NUM}" || test_die "node${NUM} not able to ping mpagot-vm-0${NUM} at 192.168.1.4${OTHER_NUM}"
      ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' ping -c 10 '"${MYNAME}-vm-0${OTHER_NUM}" || test_die "node${NUM} not able to ping ${MYNAME}-vm-0${OTHER_NUM} by name"
      ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' ssh '"${MY_USERNAME}@${MYNAME}-vm-0${OTHER_NUM}"' whoami'
      ssh -i $MYSSHKEY $MY_USERNAME@$MY_PUBIP_ADDR 'ssh '"${MY_USERNAME}@${MYNAME}-vm-0${NUM}"' sudo ssh '"${MY_USERNAME}@${MYNAME}-vm-0${OTHER_NUM}"' whoami'
    done
done